<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pythons on</title><link>https://lazychoi.github.io/quartz/python/</link><description>Recent content in Pythons on</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><atom:link href="https://lazychoi.github.io/quartz/python/index.xml" rel="self" type="application/rss+xml"/><item><title>datetime</title><link>https://lazychoi.github.io/quartz/python/datetime/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lazychoi.github.io/quartz/python/datetime/</guid><description>기본 사용법 1 2 3 4 5 6 7 8 9 10 11 from datetime import datetime now = datetime.</description></item><item><title>if문 한 줄로 쓰기</title><link>https://lazychoi.github.io/quartz/python/if%EB%AC%B8-%ED%95%9C-%EC%A4%84%EB%A1%9C-%EC%93%B0%EA%B8%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lazychoi.github.io/quartz/python/if%EB%AC%B8-%ED%95%9C-%EC%A4%84%EB%A1%9C-%EC%93%B0%EA%B8%B0/</guid><description>[조건문이 True인 경우] if 조건문 else [조건문이 False인 경우]
1 2 3 x = 3 &amp;#39;짝수&amp;#39; if x % 2 == 0 else &amp;#39;홀수&amp;#39; # &amp;#39;홀수&amp;#39;</description></item><item><title>pandas loc iloc 차이</title><link>https://lazychoi.github.io/quartz/python/pandas-loc-iloc-%EC%B0%A8%EC%9D%B4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lazychoi.github.io/quartz/python/pandas-loc-iloc-%EC%B0%A8%EC%9D%B4/</guid><description>loc : 인덱스 이름 사용, 범위의 끝 포함 iloc : 위치 인덱스 사용, 범위의 끝 미포함 1 2 3 4 5 6 7 8 9 10 11 12 13 14 import pandas as pd dic_data = {&amp;#39;col1&amp;#39;:[1,2,3], &amp;#39;col2&amp;#39;:[4,5,6], &amp;#39;col3&amp;#39;:[7,8,9]} df = pd.</description></item><item><title>python index</title><link>https://lazychoi.github.io/quartz/python/_index_python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lazychoi.github.io/quartz/python/_index_python/</guid><description>기본 문법 [[if문 한 줄로 쓰기]] 날짜와 시간 다루기 [[datetime]] 데이터 분석 [[pandas loc iloc 차이]] [[데이터프레임 특정 열의 고윳값 개수와 비중]] [[결측치 삭제]] [[결측치 대체]] [[필터링]] [[특정 조건을 만족하는 행 인덱스 출력]] [[python/데이터프레임 합치기 concat]] [[데이터프레임 합치기 merge]] [[데이터프레임 합치기 join]]</description></item><item><title>결측치 대체</title><link>https://lazychoi.github.io/quartz/python/%EA%B2%B0%EC%B8%A1%EC%B9%98-%EB%8C%80%EC%B2%B4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lazychoi.github.io/quartz/python/%EA%B2%B0%EC%B8%A1%EC%B9%98-%EB%8C%80%EC%B2%B4/</guid><description>결측치를 평균으로 대체 e.g. &amp;lsquo;age&amp;rsquo; 열의 결측치를 평균으로 대체
1 2 3 4 5 import seaborn as sns df = sns.</description></item><item><title>결측치 삭제</title><link>https://lazychoi.github.io/quartz/python/%EA%B2%B0%EC%B8%A1%EC%B9%98-%EC%82%AD%EC%A0%9C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lazychoi.github.io/quartz/python/%EA%B2%B0%EC%B8%A1%EC%B9%98-%EC%82%AD%EC%A0%9C/</guid><description>결측치가 있는 행은 모두 삭제 1 2 3 4 import seaborn as sns df = sns.load_dataset(&amp;#39;titanic&amp;#39;) df.dropna() 특정 열에 결측치가 있는 행만 삭제 e.</description></item><item><title>데이터프레임 특정 열의 고윳값 개수와 비중</title><link>https://lazychoi.github.io/quartz/python/%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%94%84%EB%A0%88%EC%9E%84-%ED%8A%B9%EC%A0%95-%EC%97%B4%EC%9D%98-%EA%B3%A0%EC%9C%B3%EA%B0%92-%EA%B0%9C%EC%88%98%EC%99%80-%EB%B9%84%EC%A4%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lazychoi.github.io/quartz/python/%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%94%84%EB%A0%88%EC%9E%84-%ED%8A%B9%EC%A0%95-%EC%97%B4%EC%9D%98-%EA%B3%A0%EC%9C%B3%EA%B0%92-%EA%B0%9C%EC%88%98%EC%99%80-%EB%B9%84%EC%A4%91/</guid><description>열 한 개의 고윳값 개수 출력 1 2 3 4 5 6 7 import seaborn as sns df = sns.</description></item><item><title>데이터프레임 합치기 concat</title><link>https://lazychoi.github.io/quartz/python/%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%94%84%EB%A0%88%EC%9E%84-%ED%95%A9%EC%B9%98%EA%B8%B0-concat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lazychoi.github.io/quartz/python/%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%94%84%EB%A0%88%EC%9E%84-%ED%95%A9%EC%B9%98%EA%B8%B0-concat/</guid><description>두 개 데이터프레임 만들기 1 2 3 4 5 6 num1 = np.arange(1, 13) num2 = np.arange(13,25) num1 = num1.</description></item><item><title>데이터프레임 합치기 join</title><link>https://lazychoi.github.io/quartz/python/%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%94%84%EB%A0%88%EC%9E%84-%ED%95%A9%EC%B9%98%EA%B8%B0-join/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lazychoi.github.io/quartz/python/%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%94%84%EB%A0%88%EC%9E%84-%ED%95%A9%EC%B9%98%EA%B8%B0-join/</guid><description>행 인덱스를 기준으로 데이터프레임을 합친다. 즉, 열 방향(우측)으로 합친다.
left join이 기본값이다.
주의!! 두 데이터프레임에 이름이 같은 컬럼명이 있으면 안 된다.</description></item><item><title>데이터프레임 합치기 merge</title><link>https://lazychoi.github.io/quartz/python/%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%94%84%EB%A0%88%EC%9E%84-%ED%95%A9%EC%B9%98%EA%B8%B0-merge/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lazychoi.github.io/quartz/python/%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%94%84%EB%A0%88%EC%9E%84-%ED%95%A9%EC%B9%98%EA%B8%B0-merge/</guid><description>key(이름이 같은 열)를 기준으로 두 개의 데이터프레임을 합친다.
이름이 다를 경우 left_on=&amp;lsquo;열 이름&amp;rsquo;, right_on=&amp;lsquo;열 이름&amp;rsquo;을 지정한다.
합치는 방법
how=&amp;lsquo;inner&amp;rsquo; : 교집합(기본값) how=&amp;lsquo;left&amp;rsquo; : left - right how=&amp;lsquo;right&amp;rsquo; : right - left how=&amp;lsquo;outer&amp;rsquo; : 합집합 1 2 3 df_2 = pd.</description></item><item><title>특정 조건을 만족하는 행 인덱스 출력</title><link>https://lazychoi.github.io/quartz/python/%ED%8A%B9%EC%A0%95-%EC%A1%B0%EA%B1%B4%EC%9D%84-%EB%A7%8C%EC%A1%B1%ED%95%98%EB%8A%94-%ED%96%89-%EC%9D%B8%EB%8D%B1%EC%8A%A4-%EC%B6%9C%EB%A0%A5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lazychoi.github.io/quartz/python/%ED%8A%B9%EC%A0%95-%EC%A1%B0%EA%B1%B4%EC%9D%84-%EB%A7%8C%EC%A1%B1%ED%95%98%EB%8A%94-%ED%96%89-%EC%9D%B8%EB%8D%B1%EC%8A%A4-%EC%B6%9C%EB%A0%A5/</guid><description>numpy.where(조건) 판다스 시리즈에서 값이 양수인 인덱스 반환
1 2 3 4 5 6 import numpy as np import pandas as pd num = pd.</description></item><item><title>필터링</title><link>https://lazychoi.github.io/quartz/python/%ED%95%84%ED%84%B0%EB%A7%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lazychoi.github.io/quartz/python/%ED%95%84%ED%84%B0%EB%A7%81/</guid><description>특정 열에서 특정 값이 있는 행만 출력 e.g. 실린더 개수가 4개인 행만 출력
1 2 3 4 5 import seaborn as sns df = sns.</description></item></channel></rss>